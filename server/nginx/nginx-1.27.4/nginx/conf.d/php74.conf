# 这里使用负载均衡目的是担心php74容器不起来，导致NGINX也不能启动
upstream php74_backend {
    server php74:9000 max_fails=3 fail_timeout=30s;
    server 127.0.0.1:9000 backup;
}

server {
    listen       80; #监听所有的ipv4的地址
    listen  [::]:80; #监听所有的ipv6的地址
    server_name  localhost;

    #access_log  /var/log/nginx/host.access.log  main;

    set $WWWROOT_PATH /data/wwwroot/php;

    location / {
        root    $WWWROOT_PATH;
        index  index.php index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    
    location ~ \.php$ {
        fastcgi_pass   php74_backend; #同一个局域网直接使用php容器
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  $WWWROOT_PATH$fastcgi_script_name;
        include        fastcgi_params;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
